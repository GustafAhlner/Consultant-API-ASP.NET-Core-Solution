// <auto-generated />
using System;
using Consultant_API_ASP.NET_Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Consultant_API_ASP.NET_Core.Migrations
{
    [DbContext(typeof(ConsultantContext))]
    partial class ConsultantContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Consultant_API_ASP.NET_Core.Data.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine");

                    b.Property<string>("City");

                    b.Property<string>("Comment");

                    b.Property<int>("ConsultantId");

                    b.Property<string>("CountryRegion");

                    b.Property<int>("PostalCode");

                    b.HasKey("AddressId");

                    b.HasIndex("ConsultantId");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("Consultant_API_ASP.NET_Core.Data.Entities.Competence", b =>
                {
                    b.Property<int>("CompetenceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompetenceLevel");

                    b.Property<string>("CompetenceName");

                    b.HasKey("CompetenceId");

                    b.ToTable("competences");
                });

            modelBuilder.Entity("Consultant_API_ASP.NET_Core.Data.Entities.Consultant", b =>
                {
                    b.Property<int>("ConsultantId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email");

                    b.Property<string>("ImageURL");

                    b.Property<string>("NameFirst");

                    b.Property<string>("NameSecond");

                    b.Property<string>("Telephone");

                    b.HasKey("ConsultantId");

                    b.ToTable("consultants");
                });

            modelBuilder.Entity("Consultant_API_ASP.NET_Core.Data.Entities.ConsultantCompetence", b =>
                {
                    b.Property<int>("CompetenceId");

                    b.Property<int>("ConsultantId");

                    b.HasKey("CompetenceId", "ConsultantId");

                    b.HasIndex("ConsultantId");

                    b.ToTable("ConsultantCompetences");
                });

            modelBuilder.Entity("Consultant_API_ASP.NET_Core.Data.Entities.Address", b =>
                {
                    b.HasOne("Consultant_API_ASP.NET_Core.Data.Entities.Consultant")
                        .WithMany("Addresses")
                        .HasForeignKey("ConsultantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Consultant_API_ASP.NET_Core.Data.Entities.ConsultantCompetence", b =>
                {
                    b.HasOne("Consultant_API_ASP.NET_Core.Data.Entities.Competence", "Competence")
                        .WithMany("CompetenceConsultants")
                        .HasForeignKey("CompetenceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Consultant_API_ASP.NET_Core.Data.Entities.Consultant", "Consultant")
                        .WithMany("CompetenceConsultants")
                        .HasForeignKey("ConsultantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
